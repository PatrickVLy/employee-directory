{"version":3,"sources":["FilterInput.js","Table.js","App.js","API.js","index.js"],"names":["FilterInput","users","updateUsers","useState","inputValue","updateInput","useEffect","filteredUsers","filter","name","first","toLowerCase","indexOf","value","onChange","e","target","Table","sortedUsers","updateSortedUsers","className","scope","onClick","updateSort","sort","a","b","nameA","nameB","map","thumbnail","picture","phone","email","last","key","src","App","initialUsers","updateAvailableUsers","usersToRender","updateUsersToRender","axios","get","then","results","data","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mPAsBeA,EApBK,SAAC,GAA4B,IAA1BC,EAAyB,EAAzBA,MAAOC,EAAkB,EAAlBA,YAAkB,EACZC,mBAAS,IADG,mBACvCC,EADuC,KAC3BC,EAD2B,KAe9C,OAZAC,qBAAU,WACR,IAAMC,EACW,KAAfH,EACIH,EACAA,EAAMO,QACJ,qBAAGC,KAAQC,MACHC,cAAcC,QAAQR,EAAWO,gBAAkB,KAGnET,EAAYK,KACX,CAACH,EAAYH,IAGd,2BAAOY,MAAOT,EAAYU,SAAU,SAAAC,GAAC,OAAIV,EAAYU,EAAEC,OAAOH,W,QCoDnDI,G,KAnED,SAAC,GAAe,IAAbhB,EAAY,EAAZA,MAAY,EACcE,mBAAS,IADvB,mBACpBe,EADoB,KACPC,EADO,KAK3B,OAFAb,qBAAU,kBAAMa,EAAkBlB,KAAQ,CAACA,IAGzC,6BACE,2BAAOmB,UAAU,SACf,+BACE,4BACE,iCACA,wBACEC,MAAM,MACNC,QAAS,WACP,IACMC,EADS,YAAOtB,GACOuB,MAAK,SAACC,EAAGC,GACpC,IAAMC,EAAQF,EAAEhB,KAAKC,MACfkB,EAAQF,EAAEjB,KAAKC,MAErB,OAAIiB,EAAQC,GACF,EAEND,EAAQC,EACH,EAGF,KAGTT,EAAkBI,KAGpB,yCAEF,wBAAIF,MAAM,OAAV,YACA,wBAAIA,MAAM,OAAV,SACA,wBAAIA,MAAM,OAAV,kBAGJ,+BACGH,EAAYW,KACX,gBACaC,EADb,EACEC,QAAWD,UACXE,EAFF,EAEEA,MACAC,EAHF,EAGEA,MAHF,IAIExB,KAAQC,EAJV,EAIUA,MAAOwB,EAJjB,EAIiBA,KAJjB,OAME,wBAAIC,IAAKF,GACL,4BACA,yBAAKG,IAAKN,KAEZ,4BAAKpB,GACL,4BAAKwB,GACL,4BAAKD,GACL,4BAAKD,GAGL,sC,iBCjCGK,MApBnB,WAAgB,IAAD,EACkClC,mBAAS,IAD3C,mBACJmC,EADI,KACUC,EADV,OAEkCpC,mBAAS,IAF3C,mBAEJqC,EAFI,KAEWC,EAFX,KAOX,OAHAnC,qBAAU,WCRLoC,IAAMC,IAAI,iDDSFC,MAAK,gBAAWC,EAAX,EAAGC,KAAQD,QAAX,OAA2BN,EAAqBM,QAC/D,IAEC,yBAAKzB,UAAU,OACb,yBAAKA,UAAU,cAAa,kDAC5B,yIAGA,kBAAC,EAAD,CAAanB,MAAOqC,EAAcpC,YAAauC,KAE/C,kBAAC,EAAD,CAAOxC,MAAOuC,MEjBxBO,IAASC,OACL,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,U","file":"static/js/main.1d65a979.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\n\nconst FilterInput = ({ users, updateUsers }) => {\n  const [inputValue, updateInput] = useState(\"\");\n\n  useEffect(() => {\n    const filteredUsers =\n      inputValue === \"\"\n        ? users\n        : users.filter(\n            ({ name: { first } }) =>\n              first.toLowerCase().indexOf(inputValue.toLowerCase()) >= 0\n          );\n\n    updateUsers(filteredUsers);\n  }, [inputValue, users]);\n\n  return (\n    <input value={inputValue} onChange={e => updateInput(e.target.value)} />\n  );\n};\n\nexport default FilterInput;\n","import React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\n\nconst Table = ({ users }) => {\n  const [sortedUsers, updateSortedUsers] = useState([]);\n\n  useEffect(() => updateSortedUsers(users), [users]);\n\n  return (\n    <div>\n      <table className=\"table\">\n        <thead>\n          <tr>\n            <th> </th>\n            <th\n              scope=\"col\"\n              onClick={() => {\n                const usersCopy = [...users];\n                const updateSort = usersCopy.sort((a, b) => {\n                  const nameA = a.name.first;\n                  const nameB = b.name.first;\n\n                  if (nameA < nameB) {\n                    return -1;\n                  }\n                  if (nameA > nameB) {\n                    return 1;\n                  }\n\n                  return 0;\n                });\n\n                updateSortedUsers(updateSort);\n              }}\n            >\n              <u>FirstName</u>\n            </th>\n            <th scope=\"col\">LastName</th>\n            <th scope=\"col\">Email</th>\n            <th scope=\"col\">Phone Number</th>\n          </tr>\n        </thead>\n        <tbody>\n          {sortedUsers.map(\n            ({\n              picture: { thumbnail },\n              phone,\n              email,\n              name: { first, last}\n            }) => (\n              <tr key={email}>\n                  <td>\n                  <img src={thumbnail} />\n                </td>\n                <th>{first}</th>\n                <td>{last}</td>\n                <td>{email}</td>\n                <td>{phone}</td>\n              \n\n                <td></td>\n              </tr>\n            )\n          )}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\nexport default Table;\n","import React, { useEffect, useState } from \"react\";\nimport FilterInput from \"./FilterInput\";\nimport Table from \"./Table\";\nimport { getUsers } from \"./API\";\nimport \"./App.css\";\n\n\nfunction App() {\n    const [initialUsers, updateAvailableUsers] = useState([]);\n    const [usersToRender, updateUsersToRender] = useState([]);\n  \n    useEffect(() => {\n      getUsers().then(({ data: { results } }) => updateAvailableUsers(results));\n    }, []);\n    return (\n        <div className=\"App\">\n          <div className=\"App-header\"><h1>Employee Directory</h1>\n          <p>\n            To Sort by First name, please click on FirstName. To Filter by first name please enter name into text box.\n          </p>\n          <FilterInput users={initialUsers} updateUsers={updateUsersToRender} />\n          </div>\n          <Table users={usersToRender} />\n        </div>\n      );\n    }\n    \n    export default App;","import axios from \"axios\";\n\nexport const getUsers = function() {\n  return axios.get(\"https://randomuser.me/api/?results=200&nat=us\");\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>,\n    document.getElementById('root')\n  );\n  "],"sourceRoot":""}